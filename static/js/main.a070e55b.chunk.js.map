{"version":3,"sources":["components/Logo/index.js","components/CardContainer/cardContainerSlice.js","components/Search/searchSlice.js","utils/index.js","api/search.js","components/Search/index.js","components/Search/hooks.js","components/Card/index.js","components/Title/index.js","components/Loader/index.js","components/CardContainer/index.js","App.js","config/store.js","serviceWorker.js","index.js"],"names":["Logo","className","isLoading","initialState","usuarios","index","fuentes","conciliaciones","tableros","searchSlice","createSlice","name","reducers","changeIndex","state","action","payload","loading","reset","actions","search","searchResults","result","isObject","value","Object","isLast","arr","length","files","getAlldata","a","promises","map","file","fetch","Promise","all","responses","response","filter","url","includes","json","data","console","error","handleArrayOfString","query","some","item","values","lookForMatches","entries","key","isString","Array","isArray","isNumber","objectValues","doSearch","reduce","obj","_module","keys","results","Search","ref","useRef","dispatch","useDispatch","useSearch","useState","activeClear","setActiveClear","useEffect","current","focus","data-testid","onChange","target","onKeyUp","keyCode","type","placeholder","onClick","selectType","age","gender","phone","email","address","createdAt","src","alt","firstName","lastName","conciliationName","balance","timestamp","description","updateAt","dashboardName","visualType","visuals","tags","v","t","company","Card","card","Title","title","Loader","CardContainer","useSelector","cardsConfig","cards","_modules","config","noResults","_id","setTimeout","loadMore","App","configureStore","reducer","cardsReducer","searchReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a070e55b.chunk.js","sourcesContent":["import './style.css';\n\nconst Logo = () => <h1 className=\"logo\">Searchy</h1>;\n\nexport default Logo;\n","import { createSlice } from '@reduxjs/toolkit';\n\n/* Helpers for testing purposes */\nconst index = 2;\nconst isLoading = false;\n\nconst initialState = {\n  usuarios: {\n    index,\n    isLoading\n  },\n  fuentes: {\n    index,\n    isLoading\n  },\n  conciliaciones: {\n    index,\n    isLoading\n  },\n  tableros: {\n    index,\n    isLoading\n  },\n}\n\nexport const searchSlice = createSlice({\n  name: 'cards',\n  initialState,\n  reducers: {\n    changeIndex: (state, action)  => {\n      state[action.payload].index += 2;\n    },\n    loading: (state, action)  => {\n      state[action.payload].isLoading = !state[action.payload].isLoading;\n    },\n    reset: ()  => initialState,\n  },\n});\n\n/* Changes the store to show the loader, then, increses the number of cards to be renders */\nexport const loadMore = (key) => dispatch => {\n  dispatch(loading(key));\n  setTimeout(() => {\n    dispatch(loading(key));\n    dispatch(changeIndex(key));\n  }, 1500);\n};\n\nexport const { changeIndex, loading, reset } = searchSlice.actions;\n\nexport default searchSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState: {\n    search: {}\n  },\n  reducers: {\n    searchResults: (state, action)  => {\n      state.result= action.payload;\n    }\n  },\n});\n\nexport const { searchResults } = searchSlice.actions;\n\nexport default searchSlice.reducer;\n","/* General utilities */\nexport const isString = value => typeof value === 'string';\nexport const isArray = value =>  Array.isArray(value);\nexport const isNumber = value => typeof value === 'number';\nexport const isObject = value => value === Object(value);\nexport const isLast = (arr, index) => arr.length -1 === index;\n","import { isArray, isNumber, isString, isObject } from '../utils';\n\nconst files = [\n  'usuarios',\n  'conciliaciones',\n  'fuentes',\n  'tableros'\n];\n\nexport const getAlldata = async () => {\n  try {\n    const promises = files.map(file =>  fetch(`/searchy/data/${file}.json`));\n    const responses = await Promise.all(promises)\n\n    return Promise.all(responses.map(async response => {\n      const [name] = files.filter(file => response.url.includes(file));\n      const data = await response.json();\n\n      return {[name]: data};\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nconst handleArrayOfString = (arr, query) => {\n  return arr.includes(query) || arr.some(item => {\n    if (isObject(item)) {\n      const objectValues = Object.values(item);\n      return objectValues.includes(query);\n    }\n    return item.includes(query);\n  });\n};\n\nconst lookForMatches = (query, arr) => {\n  return arr.filter(item => {\n    return Object.entries(item).some(([key, value]) => {\n      if (key === '_id') return false;\n\n      if(isString(value)) {\n        return value.includes(query);\n      }\n\n      if(isArray(value)) {\n        return handleArrayOfString(value, query)\n      }\n\n      if (isNumber(value)) {\n        // eslint-disable-next-line eqeqeq\n        return value == query;\n      }\n\n      if (isObject(value)) {\n        const objectValues = Object.values(value);\n        return handleArrayOfString(objectValues, query);\n      }\n\n      return false;\n    })\n  });\n}\n\nexport const doSearch = async (query = '') => {\n  const data = await getAlldata();\n\n  return data.reduce((obj, _module) => {\n    const [key] = Object.keys(_module);\n    const arr = _module[key];\n    const results = lookForMatches(query, arr);\n\n    return {\n      ...obj,\n      [key]: results,\n    };\n  }, {});\n}\n","import { useEffect, useRef, useState } from 'react';\nimport { useSearch } from './hooks'\n\nimport './style.css';\n\nconst Search = () => {\n  const ref = useRef();\n  const doSearch = useSearch();\n  const [activeClear, setActiveClear] = useState(false);\n  const handleChange = ({ target }) => setActiveClear(target.value.length > 0);\n  const handleSearch = ({ keyCode }) => {\n    /* Enter button */\n    if(keyCode === 13) {\n      doSearch(ref.current.value);\n    }\n  }\n  const handleClear = () => {\n    ref.current.value = '';\n    setActiveClear(false);\n  }\n\n  /* Focus the search input as soon as the page loads */\n  useEffect(() => ref.current.focus());\n\n  return <div className=\"search\">\n    <input\n      data-testid=\"search\"\n      onChange={handleChange}\n      onKeyUp={handleSearch}\n      className=\"search__input\"\n      type=\"text\"\n      ref={ref}\n      placeholder=\"Escribe algo, ejemplo: CooperGrant\" />\n    <button\n      className={`search__clear ${ activeClear ? 'search__clear--active' : ''}`}\n      onClick={handleClear}\n    >✕</button>\n  </div>\n}\n\nexport default Search;\n","import { useDispatch } from 'react-redux';\nimport { reset } from '../CardContainer/cardContainerSlice';\nimport { searchResults } from './searchSlice';\nimport { doSearch } from '../../api/search';\n\n/* Handles the api calls and saves the data in store */\nconst useSearch =  () => {\n  const dispatch = useDispatch();\n  return async (query) => {\n    const results = await doSearch(query);\n    dispatch(searchResults(results));\n    /* After a new call, the state of the cards need to be reset in order to keep the initial behavrio */\n    dispatch(reset());\n  }\n}\n\nexport { useSearch };\n","import { isLast } from '../../utils';\nimport './style.css';\n\n/* This component renders the structure of different type of cards, no contains business logic */\n\n/* Renders the structure for the user card */\nconst renderUserCard = ({ name, age, gender, phone, email, address, createdAt }) => {\n  return (\n    <div className=\"user\">\n      <img className=\"user__photo\" src=\"https://picsum.photos/100/100\" alt=\"user\"/>\n      <div className=\"user__info\">\n        <p><b>Nombre:</b> {name.firstName}{name.lastName}</p>\n        <p><b>Edad:</b> {age}</p>\n        <p><b>Genero:</b> {gender}</p>\n        <p><b>Teléfono:</b> {phone}</p>\n        <p><b>Correo:</b> {email}</p>\n        <p><b>Dirección:</b> {address}</p>\n        <p><b>Fecha de creación:</b> {createdAt}</p>\n      </div>\n    </div>\n  );\n}\n\n/* Renders the structure for the coinciliation card */\nconst renderConciliationCard = ({ conciliationName, balance, timestamp, description}) => {\n  return (\n    <div className=\"coinciliation\">\n      <div className=\"coinciliation__info\">\n        <p><b>Conciliacion:</b> {conciliationName}</p>\n        <p><b>Balance:</b> {balance}</p>\n        <p><b>Fecha:</b> {timestamp.createdAt} - {timestamp.updateAt}</p>\n        <p><b>Descripción:</b> {description}</p>\n      </div>\n    </div>\n  );\n}\n\n/* Renders the structure for the source card */\nconst renderSourceCard = ({ company, timestamp, description}) => {\n  return (\n    <div className=\"source\">\n      <div className=\"source__info\">\n        <p><b>Empresa:</b> {company}</p>\n        <p><b>Fecha:</b> {timestamp.createdAt} - {timestamp.updateAt}</p>\n        <p><b>Descripción:</b> {description}</p>\n      </div>\n    </div>\n  );\n}\n\n/* Renders the structure for the table card */\nconst renderTableCard = ({ dashboardName, visualType, description, visuals, tags, timestamp}) => {\n  return (\n    <div className=\"table\">\n      <div className=\"table__info\">\n        <p><b>Nombre:</b> {dashboardName}</p>\n        <p><b>Tipo:</b> {visualType.map((v, index) => `${v.name}${!isLast(visualType, index) ? ', ' : ''} `)}</p>\n        <p><b>Fecha:</b> {timestamp.createdAt} - {timestamp.updateAt}</p>\n        <p><b>Descripción:</b> {description}</p>\n        <p><b>Visual:</b> {visuals.map((v, index)=> `[${v.name} - ${v.type}]${!isLast(visuals, index) ? ', ' : ''} `)}</p>\n        <p><b>Tags:</b> {tags.map((t, index )=> `${t}${!isLast(tags, index) ? ', ' : ''}`)}</p>\n      </div>\n    </div>\n  );\n}\n\n/* Type of cards */\nconst selectType = {\n  usuarios: renderUserCard,\n  conciliaciones: renderConciliationCard,\n  tableros: renderTableCard,\n  fuentes: renderSourceCard,\n}\n\n/* Renders a card component */\nconst Card = ({ type, card }) => {\n  return <li>\n    {selectType[type](card)}\n  </li>\n}\n\nexport default Card;\n","import './style.css';\n\nconst Title = ({ title, results }) => (\n  <div className=\"title\">\n    <h2 className={`title__text title--${title}`}>{title}</h2>\n    <span className={`title__results title--${title}`}>Resultados: {results}</span>\n  </div>\n);\n\nexport default Title;\n","import './style.css';\n\nconst Loader = () => (\n  <div className=\"loading-dots\">\n    <div className=\"loading-dots--dot\"></div>\n    <div className=\"loading-dots--dot\"></div>\n    <div className=\"loading-dots--dot\"></div>\n  </div>\n);\n\nexport default Loader;\n","\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from '../Card';\nimport Title from '../Title';\nimport Loader from '../Loader';\nimport { loadMore } from './cardContainerSlice';\nimport './style.css';\n\nconst CardContainer = () => {\n  const results = useSelector((state) => state.search.result || {});\n  const cardsConfig = useSelector((state) => state.cards || {});\n  const _modules = Object.entries(results);\n  const dispatch = useDispatch();\n\n  /* Renders very module as a section and includes the controls to load more cards */\n  const renderSections = () => _modules.map(([key, cards]) => {\n    const config = cardsConfig[key];\n    const noResults = cards.length === 0;\n    const renderButtons = () => (\n      <>\n        {cardsConfig[key].isLoading && <Loader />}\n        <button\n          onClick={() => dispatch(loadMore(key))}\n          /* keeps the focus in the element when using the tab button, but avoids clicking */\n          className={`container__load-more ${cardsConfig[key].isLoading ? 'container__load-more--hide' : ''}`}\n        >Cargar más</button>\n      </>\n    );\n\n    return (\n      <section key={key} className=\"container\">\n        <Title title={key} results={cards.length} />\n        <ul className=\"container__list\">\n        {cards.map((card, index) => index < config.index && <Card key={card._id} type={key} card={card} />)}\n        </ul>\n        { noResults ? <h3 className=\"container__no-results\">Sin resultados</h3> : renderButtons()}\n      </section>\n    )\n  });\n\n  return <main className=\"cards\">{renderSections()}</main>\n}\n\nexport default CardContainer;\n","import './App.css';\r\n\r\n// Components\r\nimport Logo from './components/Logo';\r\nimport Search from './components/Search';\r\nimport CardContainer from './components/CardContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Logo />\r\n      <Search />\r\n      <CardContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport searchReducer from '../components/Search/searchSlice';\r\nimport cardsReducer from '../components/CardContainer/cardContainerSlice';\r\n\r\n/* Imports all reducers components */\r\nexport default configureStore({\r\n  reducer: {\r\n    cards: cardsReducer,\r\n    search: searchReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './config/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}